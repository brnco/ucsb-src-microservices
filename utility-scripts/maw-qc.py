aNumList = [
'A12410',
'A12490',
'A12343',
'A12346',
'A12349',
'A12350',
'A12355',
'A12356',
'A12357',
'A12359',
'A12472',
'A12489',
'A12496',
'A12515',
'A12516',
'A12517',
'A12518',
'A12519',
'A12520',
'A12521',
'A12522',
'A12523',
'A12524',
'A12525',
'A12526',
'A12527',
'A12528',
'A12529',
'A12530',
'A12531',
'A12532',
'A12533',
'A12534',
'A12535',
'A12536',
'A12537',
'A12538',
'A12541',
'A12553',
'A12554',
'A12555',
'A12557',
'A12559',
'A12561',
'A12562',
'A12567',
'A12568',
'A12569',
'A12570',
'A12571',
'A12572',
'A12573',
'A12574',
'A12577',
'A12578',
'A12579',
'A12580',
'A12581',
'A12582',
'A12583',
'A12584',
'A12585',
'A12586',
'A12587',
'A12588',
'A12589',
'A12590',
'A12591',
'A12592',
'A12593',
'A12594',
'A12595',
'A12596',
'A12597',
'A12598',
'A12599',
'A12600',
'A12601',
'A12602',
'A12603',
'A12604',
'A12605',
'A12606',
'A12607',
'A12608',
'A12609',
'A12610',
'A12611',
'A12612',
'A12613',
'A12614',
'A12615',
'A12616',
'A12617',
'A12618',
'A12619',
'A12620',
'A12621',
'A12622',
'A12623',
'A12634',
'A12635',
'A12636',
'A12637',
'A12638',
'A12641',
'A12642',
'A12643',
'A12644',
'A12645',
'A12646',
'A12649',
'A12650',
'A12651',
'A12652',
'A12662',
'A12664',
'A12665',
'A12667',
'A12668',
'A12669',
'A12670',
'A12671',
'A12672',
'A12673',
'A12676',
'A12677',
'A12722',
'A12740',
'A12387',
'A12388',
'A12353',
'A12358',
'A12445',
'A12417',
'A12351',
'A12432',
'A12347',
'A12352',
'A12373',
'A12424',
'A12427',
'A12339',
'A12340',
'A12341',
'A12348',
'A12354',
'A12389',
'A12414',
'A12415',
'A12777',
'A12783',
'A12784',
'A12786',
'A12787',
'A12789',
'A12790',
'A12792',
'A12793',
'A12797',
'A12798',
'A12806',
'A12807',
'A12809',
'A12810',
'A12813',
'A12814',
'A12816',
'A12817',
'A12819',
'A12820',
'A12822',
'A12823',
'A12825',
'A12826',
'A12829',
'A12831',
'A12832',
'A12834',
'A12835',
'A12837',
'A12838',
'A12839',
'A12841',
'A12842',
'A13179',
'A12425',
'A12449',
'A12364',
'A12498',
'A12363',
'A12360',
'A12361',
'A12362',
'A12342',
'A12441',
'A12365',
'A12366',
'A12367',
'A12368',
'A12369',
'A12372',
'A12374',
'A12375',
'A12379',
'A12380',
'A12384',
'A12386',
'A12390',
'A12391',
'A12392',
'A12393',
'A12394',
'A12395',
'A12396',
'A12397',
'A12398',
'A12399',
'A12400',
'A12401',
'A12402',
'A12418',
'A12419',
'A12420',
'A12421',
'A12437',
'A12438',
'A12439',
'A12443',
'A12444',
'A12446',
'A12447',
'A12448',
'A12452',
'A12453',
'A12454',
'A12455',
'A12456',
'A12457',
'A12458',
'A12459',
'A12460',
'A12461',
'A12462',
'A12463',
'A12464',
'A12465',
'A12466',
'A12467',
'A12468',
'A12469',
'A12470',
'A12473',
'A12474',
'A12475',
'A12476',
'A12477',
'A12478',
'A12479',
'A12480',
'A12481',
'A12482',
'A12483',
'A12484',
'A12485',
'A12486',
'A12487',
'A12488',
'A12491',
'A12492',
'A12493',
'A12494',
'A12495',
'A12497',
'A12499',
'A12500',
'A12501',
'A12502',
'A12503',
'A12504',
'A12505',
'A12506',
'A12507',
'A12508',
'A12509',
'A12510',
'A12511',
'A12512',
'A12513',
'A12514',
'A12539',
'A12540',
'A12542',
'A12543',
'A12544',
'A12545',
'A12546',
'A12547',
'A12548',
'A12549',
'A12550',
'A12551',
'A12552',
'A12556',
'A12647',
'A12648',
'A12690',
'A12691',
'A12692',
'A12693',
'A12698',
'A12699',
'A12700',
'A12701',
'A12702',
'A12703',
'A12704',
'A12705',
'A12706',
'A12707',
'A12708',
'A12710',
'A12711',
'A12712',
'A12713',
'A12714',
'A12715',
'A12716',
'A12717',
'A12718',
'A12720',
'A12721',
'A12723',
'A12724',
'A12729',
'A12747',
'A12748',
'A12750',
'A12774',
'A12775',
'A12778',
'A12828',
'A13098',
'A13099',
'A13102',
'A13150',
'A13157',
'A13160',
'A13161',
'A13162',
'A13163',
'A13164',
'A13165',
'A13166',
'A13167',
'A13168',
'A13169',
'A13170',
'A13171',
'A13172',
'A13173',
'A13174',
'A13175',
'A13176',
'A13177',
'A13178',
'A13180',
'A13181',
'A13182',
'A13183',
'A13184',
'A13185',
'A13186',
'A13187',
'A13188',
'A13189',
'A13396',
'A13397',
'A12436',
'A12440',
'A12450',
'A12451',
'A12385',
'A12442',
'A12560',
'A12563',
'A12564',
'A12565',
'A12566',
'A12639',
'A12640',
'A12654',
'A12655',
'A12656',
'A12657',
'A12658',
'A12659',
'A12660',
'A12661',
'A12663',
'A12674',
'A12675',
'A12678',
'A12679',
'A12680',
'A12681',
'A12682',
'A12683',
'A12684',
'A12685',
'A12687',
'A12688',
'A12689',
'A12694',
'A12695',
'A12696',
'A12697',
'A12709',
'A12725',
'A12726',
'A12727',
'A12728',
'A12730',
'A12731',
'A12732',
'A12733',
'A12734',
'A12735',
'A12736',
'A12737',
'A12738',
'A12739',
'A12741',
'A12742',
'A12743',
'A12745',
'A13156',
'A12344',
'A12403',
'A12404',
'A12405',
'A12406',
'A12407',
'A12408',
'A12409',
'A12412',
'A12413',
'A12416',
'A12422',
'A12423',
'A12426',
'A12428',
'A12429',
'A12431',
'A12471'
]
import os
import sys
sys.path.insert(0,"S:/avlab/microservices")
###UCSB modules###
import config as rawconfig
import util as ut
import logger as log
import mtd
import makestartobject as makeso
conf = rawconfig.config()
june7 = 1496818800
tooyoung = []
notInFM = []
reprocessing = []
inFMnotNewIngest = []
done = []
anls = sorted(aNumList)
for a in anls:
	aNum = a.lower()
	folderpath = os.path.join("R:/audio/" + aNum[1:-3] + "000",aNum)
	if not os.path.exists(folderpath):
		#check in FM for rawCap Nums
		#if not in fm - report as redo
		#check in new_ingest for rawCapNums
		#if in new_ingest
		#report as awaiting processing
		#else - report as redo
		print aNum
		row = mtd.get_raw_captures(conf.magneticTape.cnxn,**{"aNumber":aNum})
		if row:
			if row[0]:
				if os.path.exists(os.path.join("R:/audio/avlab/new_ingest",row[0])):
					reprocessing.append(aNum)
				else:
					inFMnotNewIngest.append(aNum)	
			elif row[1]:
				if os.path.exists(os.path.join("R:/audio/avlab/new_ingest",row[1])):
					reprocessing.append(aNum)
				else:
					inFMnotNewIngest.append(aNum)
			else:	
				notInFM.append(aNum)
	else:
		startObj = makeso.parse_input(aNum)
		ageSeconds = os.path.getctime(startObj)
		if ageSeconds < june7:
			tooyoung.append(aNum)
		else:
			done.append(aNum)
print "The following files were made prior to June 7"
for entry in tooyoung:
	print entry
foo = raw_input("eh")	
print ""
print "The following files are done"
for entry in done:
	print entry
foo = raw_input("eH")	
print ""
print "The following files are not in FM"
for entry in notInFM:
	print entry
foo = raw_input("eh")
print ""
print "The following are in FM but not in new-Ingest"
for entry in inFMnotNewIngest:
	print entry
foo = raw_input("eh")
print ""
print "The following are awaiting reprocessing"
for entry in reprocessing:
	print entry